{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchInputValue","onSubmit","e","preventDefault","props","setState","onChange","currentTarget","value","toLowerCase","className","this","type","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","src","alt","Button","children","onClick","propType","PropTypes","element","func","isRequired","BASE_URL","STATUS","ImageGallery","images","page","perPage","status","error","fetchData","searchQuery","fetch","then","r","ok","Error","data","json","loadMoreClickHandler","prevState","prevProps","hits","catch","finally","map","image","webformatURL","id","App","onSubmitHandler","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e172617b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Searchbar extends Component {\n  static propTypes = { onSubmit: PropTypes.func.isRequired };\n  state = {\n    searchInputValue: '',\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.searchInputValue);\n    this.setState({ searchInputValue: '' });\n  };\n  onChange = e => {\n    this.setState({ searchInputValue: e.currentTarget.value.toLowerCase() });\n  };\n  render() {\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.onSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              onChange={this.onChange}\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={this.state.searchInputValue}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nexport class ImageGalleryItem extends Component {\n  //   static propTypes = { image: PropTypes.array.isRequired };\n\n  render() {\n    const { src } = this.props;\n    return (\n      <li className=\"ImageGalleryItem\">\n        <img src={src} alt=\"\" className=\"ImageGalleryItem-image\" />\n      </li>\n    );\n  }\n}\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst Button = ({ children, onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\nButton.propType = {\n  children: PropTypes.element,\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nconst BASE_URL =\n  'https://pixabay.com/api/?key=21859893-eed1f1d786560e2667ad1f26b&image_type=photo&orientation=horizontal';\nconst STATUS = {\n  idle: 'idle',\n  pending: 'pending',\n  rejected: 'rejected',\n  resolved: 'resolved',\n};\nexport class ImageGallery extends Component {\n  static propTypes = { searchQuery: PropTypes.string };\n  state = {\n    images: [],\n    page: 1,\n    perPage: 12,\n    status: STATUS.idle,\n    error: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.searchQuery !== this.props.searchQuery) {\n      this.fetchData()\n        .then(data => this.setState({ images: [...data.hits], page: 1 }))\n        .catch(error =>\n          this.setState({ status: STATUS.rejected, error: error }),\n        )\n        .finally(() => this.setState({ status: STATUS.resolved }));\n    }\n    if (\n      prevState.page !== this.state.page &&\n      this.state.page > 1 &&\n      prevProps.searchQuery === this.props.searchQuery\n    ) {\n      this.fetchData(this.state.page)\n        .then(data =>\n          this.setState({ images: [...prevState.images, ...data.hits] }),\n        )\n        .catch(error =>\n          this.setState({ status: STATUS.rejected, error: error }),\n        )\n        .finally(() => this.setState({ status: STATUS.resolved }));\n    }\n  }\n\n  fetchData = (page = 1) => {\n    const { perPage } = this.state;\n    const { searchQuery } = this.props;\n    this.setState({ status: STATUS.pending });\n    return fetch(\n      `${BASE_URL}&q=${searchQuery}&per_page=${perPage}&page=${page}`,\n    )\n      .then(r => {\n        if (!r.ok) {\n          throw Error(`error request ${searchQuery}`);\n        }\n      })\n      .then(data => data.json());\n  };\n  loadMoreClickHandler = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  };\n  render() {\n    const { status } = this.state;\n\n    if (status === STATUS.idle) {\n      return <></>;\n    }\n    if (status === STATUS.pending) {\n      return <h1>Loading</h1>;\n    }\n    if (status === STATUS.rejected) {\n      return <div>this.state.error();</div>;\n    }\n    if (status === STATUS.resolved) {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {this.state.images.map(image => (\n              <ImageGalleryItem key={image.id} src={image.webformatURL} />\n            ))}\n          </ul>\n          <Button onClick={this.loadMoreClickHandler}>Load more</Button>\n        </>\n      );\n    }\n  }\n}\n\nexport default ImageGallery;\n","import './App.css';\nimport React, { Component } from 'react'\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n\nexport class App extends Component {\n  state = {\n    searchQuery: '',\n  }\n\n  onSubmitHandler = searchQuery => { this.setState({ searchQuery }) }\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmitHandler} />\n        <ImageGallery searchQuery={this.state.searchQuery} />\n      </>\n    )\n  }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}